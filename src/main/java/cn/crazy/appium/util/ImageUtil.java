package cn.crazy.appium.util;import javax.imageio.*;import org.apache.commons.io.FileUtils;import org.openqa.selenium.OutputType;import io.appium.java_client.android.AndroidDriver;import io.appium.java_client.android.AndroidElement;import net.sf.saxon.functions.Data;import java.awt.image.*;import java.awt.*;//Colorimport java.io.*;import java.text.SimpleDateFormat;/** * 图片对比工具类* <p>Title: ImageUtil</p>  * <p>Description: </p>  * @author duanhao * @date 2018年8月19日 */public class ImageUtil{    public static int[] getData(String name)throws Exception{        BufferedImage img = ImageIO.read(new File(name));        BufferedImage slt = new BufferedImage(100,100,BufferedImage.TYPE_INT_RGB);        slt.getGraphics().drawImage(img,0,0,100,100,null);//        System.out.println(slt.getWidth());//        System.out.println(slt.getHeight());                int[] data = new int[256];        for(int x = 0;x<slt.getWidth();x++){            for(int y = 0;y<slt.getHeight();y++){                int rgb = slt.getRGB(x,y);                Color myColor = new Color(rgb);                int r = myColor.getRed();                int g = myColor.getGreen();                int b = myColor.getBlue();                data[(r+g+b)/3]++;            }        }        return data;    }    /*     * 异常情况下的截图操作     */    public static void ErrorScreemShot(AndroidDriver<AndroidElement> driver,String ErrorScreenShot) throws Exception{    	//设置时间格式    	SimpleDateFormat format=new SimpleDateFormat("yyyy-MM-dd-HH-mm-ss");    	//生成时间戳    	String dataString = format.format(new Data());    	String dir_name = System.getProperty("user.dir")+"\\images";    	System.out.println("异常图片目录"+dir_name);    	//由于可能存在异常图片的目录被删除的可能，所以先判断一下目录是否存在    	if(!(new File(dir_name).isDirectory())){    		//判断目录是否存在    		new File(dir_name).mkdirs();    	}    	//调用方法捕捉画面    	File Screen = driver.getScreenshotAs(OutputType.FILE);    	//复制文件到指定的目录    	//图片最后存放的路径由目录：dir_name+时间桌+测试套件+测试用例+测试步骤组合生成    	System.out.println("异常图片名称"+dir_name+"\\"+dataString+ErrorScreenShot+".png");    	FileUtils.copyFile(Screen, new File(dir_name+"\\"+dataString+ErrorScreenShot+".png"));    }                        public static float compare(int[] s,int[] t){        float result = 0F;        for(int i = 0;i<256;i++){            int abs = Math.abs(s[i]-t[i]);            int max = Math.max(s[i],t[i]);                        result += (1-((float)abs/(max==0?1:max)));                    }        return (result/256)*100;    }    public static boolean compareImg(String srcName,String desName,float f) throws Exception{    	if(compare(getData(srcName), getData(desName))>=f){    		return true;    	}else{    		return false;    	}    }            public static void main(String[] args)throws Exception{//      float percent = compare(getData("images/10login.jpg"),getData("images/11login.jpg"));//      System.out.println("相似度"+percent+"%");      System.out.println(ImageUtil.compareImg("images/"+2+".png","images/current.png", 100f));  }        }